How do I use this with shared libraries?
========================================

Shared libraries are special because they get loaded into the process address
space *somewhere*, and we don't necessarily know where that is. This is
especially true when ASLR is enabled.

Luckily, GDB disables ASLR for us, so we don't have to worry about it. When we
start a process with GDB, shared libraries should get loaded at a consistent
address every time. You can check that your GDB does this by running:

    $ gdb cat
    (gdb) show disable-randomization

        Look for the following message as output:
        "Disabling randomization of debuggee's virtual address space is on."
                                                                       ^^^^^
    (gdb) quit

The addresses in objdump's output are relative to where the library gets loaded.
To find this address:

    1. Start GDB on the program you are interested in.
    2. set stop-on-solib-events 1
    3. Type 'c' until your shared library gets loaded (look through the list).
    4. info sharedlibrary
    5. Find your shared library in the list, copy down the start address.

        (Keep track of the number of times you need to type 'c' to get the
        program to actually run, we'll need that count later).

What GDB gives you is the start of the .text section. We want the start of the
whole library, so we have to SUBTRACT the offset of .text. To find the offset of
.text, run...

    readelf --sections <the library you are interested in>

...find the .text start address / offset, and subtract it from the value you got
from GDB. Now you have the address the library gets loaded at when that
particular program loads the library from inside GDB.

Now give that offset (in hex) as the --address-offset argument to
IndividualProbeTester.rb. Remember how I told you to keep track of the number of
times you had to press 'c' to get the program to actually run? Pass that number
as the --shared-library argument. Read the code if you want to know why that's
necessary.
